line-length = 79
target-version = "py312"
indent-width = 4
exclude = [
    ".git",
    ".venv",
    "venv",
    "build",
    "dist",
    "__pycache__",
    ".idea",
    ".pytest_cache",
    ".ruff_cache",
    "mypy_cache",
    "htmlcov",
    ".gitignore",
    ".dockerignore",
    "Dockerfile",
    "docker-compose.yml",
    "**/*.mdc",
]

[format]

[lint]
select = [
    # See https://docs.astral.sh/ruff/rules/
    #
    # pep8-naming
    "N",
    # flake8-annotations
    "ANN",
    # flake8-async
    "ASYNC",
    # FastApi
    "FAST",
    # flake8-bandit
    "S",
    # flake8-blind-except
    "BLE",
    # flake8-print
    "T20",
    # flake8-bugbear
    "B",
    # Pyflakes
    "F",
    # isort
    "I",
    # pycodestyle errors
    "E",
    # pycodestyle warnings
    "W",
    # pyupgrade
    "UP",
    # builtins
    "A",
    # erradicate
    "ERA",
    # flake8-comprehensions
    "C4",
    # flake8-pytest-style
    "PT",
    # pygrep-hooks
    "PGH",
    # flake8-unused-arguments
    "ARG",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-raise
    "RSE",
    # Perflint
    "PERF"
]


ignore = [
    # Allow using Any as type hint in special cases
    "ANN401",
    # Allow using assert in codebase
    "S101",
    # Allow raising exceptions without "from err" or "from None"
    "B904",
    # Ruff conflicting rules
    # see https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",
    "E111",
    "E114",
    "E117",
]

[lint.per-file-ignores]
"conftest.py" = [
    # flake8-bandit is not checked
    "S",
]
"test_*.py" = [
    # flake8-bandit is not checked
    "S",
    # return type annotation is not enforced in test functions
    "ANN201"
]

[lint.pep8-naming]
classmethod-decorators = ["pydantic.model_validator"]

[lint.flake8-annotations]
suppress-dummy-args = true

[lint.flake8-pytest-style]
parametrize-names-type = "csv"
